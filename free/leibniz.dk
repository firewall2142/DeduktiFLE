def leibniz :
  cts.Term
    cts.diamond
    (cts.prod
       cts.triangle
       cts.diamond
       cts.diamond
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
        cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             x
             (x0:(cts.Term cts.box x) =>
              cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                x
                (x1:(cts.Term cts.box x) => cts.univ cts.star cts.box cts.I)))))
  :=
  A:(cts.Term cts.triangle (cts.univ' cts.box cts.triangle)) =>
  x:(cts.Term cts.box A) =>
  y:(cts.Term cts.box A) =>
  cts.prod
    cts.box
    cts.star
    cts.star
    cts.I
    (cts.prod
       cts.box
       cts.box
       cts.box
       cts.I
       A
       (x0:(cts.Term cts.box A) => cts.univ cts.star cts.box cts.I))
    (x0:(cts.Term
           cts.box
           (cts.prod
              cts.box
              cts.box
              cts.box
              cts.I
              A
              (x0:(cts.Term cts.box A) => cts.univ cts.star cts.box cts.I))) =>
     cts.prod cts.star cts.star cts.star cts.I (x0 x) (x1:(cts.Term cts.star (x0 x)) => x0 y)).

def refl_leibniz :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          x
          (x0:(cts.Term cts.box x) => leibniz.leibniz x x0 x0)))
  :=
  A:(cts.Term cts.triangle (cts.univ' cts.box cts.triangle)) =>
  x:(cts.Term cts.box A) =>
  P:(cts.Term
       cts.box
       (cts.prod'
          cts.box
          cts.box
          cts.box
          A
          (x0:(cts.Term cts.box A) => cts.univ cts.star cts.box cts.I))) =>
  H:(cts.Term cts.star (P x)) => H.

def sym_leibniz :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          x
          (x0:(cts.Term cts.box x) =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             x
             (x1:(cts.Term cts.box x) =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (leibniz.leibniz x x0 x1)
                (x2:(cts.Term cts.star (leibniz.leibniz x x0 x1)) => leibniz.leibniz x x1 x0))))).

